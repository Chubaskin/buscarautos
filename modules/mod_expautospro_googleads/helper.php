<?php/****************************************************************************************\ **   @name		EXP Autos  2.0                                                  ** **   @package          Joomla 1.6                                                      ** **   @author		EXP TEAM::Alexey Kurguz (Grusha)                                ** **   @copyright	Copyright (C) 2005 - 2011  EXP TEAM::Alexey Kurguz (Grusha)     ** **   @link             http://www.feellove.eu                                          ** **   @license		Commercial License                                              ** \****************************************************************************************///no direct accessdefined('_JEXEC') or die;require_once JPATH_ROOT . '/components/com_expautospro/helpers/helper.php';class ModExpautosGoogleAds {        public static function expGoogleAds($params){        $nomap = $params->get('usegmaps');        return $nomap;    }        public static function getItemid() {        $expitemid = ExpAutosProExpparams::getExpLinkItemid();        return $expitemid;    }    public static function getCategory($module_id, $params) {        $nomap = $params->get('usegmaps');        $return = '';        $jq_chained = $params->get('jq_chained', 0);        $mod_id = 'expbutton' . $module_id;        if ($jq_chained) {            $expchange_func = ' expchangejq';        } else {            $expchange_func = ' expchange';        }        $catid = (int) JRequest::getInt('catid', 0);        $val_id = 0;        if ($catid) {            $val_id = $catid;        }        $options = ExpAutosProExpparams::getExpCategories($params->get('allowedcat'), $params->get('showcount', 1));        //print_r($options);        $ajaxlink = '';        $onchange = 'class="span2 chzn-expselectgoogleads" onchange="';        if ($params->get('usebodytype')) {            $url2 = 'index.php?option=com_expautospro&view=expuser&format=ajax&bodytype_id=';            $ajaxlink .= $expchange_func . '(this.value,\'' . $url2 . '\',\'bodytype' . $module_id . '\',\'' . $mod_id . '\');';        }        if ($params->get('useextrafield1')) {            $url3 = 'index.php?option=com_expautospro&view=expuser&format=ajax&extrafield1_id=';            $ajaxlink .= $expchange_func . '(this.value,\'' . $url3 . '\',\'extrafield1' . $module_id . '\',\'' . $mod_id . '\');';        }        if ($params->get('usemakes')) {            $url1 = 'index.php?option=com_expautospro&view=expuser&format=ajax&ecount=' . $params->get('showcount', 1) . '&expcat_id=';            $ajaxlink .= $expchange_func . '(this.value,\'' . $url1 . '\',\'makeid' . $module_id . '\',\'' . $mod_id . '\');';        }        /*        $expeqparams = $params->get('equipments');        if ($params->get('useequipment') && $expeqparams) {            $url1 = 'index.php?option=com_expautospro&view=expuser&format=ajax&expeq='.$expeqparams.'&expcequip_id=';            $ajaxlink .= ' expchange(this.value,\'' . $url1 . '\',\'expequip' . $module_id . '\',\'expbutton' . $module_id . '\',1);';        }         *          */        $onchange .= $ajaxlink.'expchg'.$nomap.'();"';        $return = JHtml::_('select.genericlist', $options, 'catid', $onchange, 'value', 'text', $val_id, 'catid' . $module_id);        return $return;    }        public static function getMake($module_id,$params) {        $jq_chained = $params->get('jq_chained', 0);        $mod_id = 'expbutton' . $module_id;        if ($jq_chained) {            $expchange_func = ' expchangejq';        } else {            $expchange_func = ' expchange';        }        $nomap = $params->get('usegmaps');        $options = array();        $catid = '';        $show_catid = $params->get('catid');        if($show_catid){            $catid = $show_catid;        }else{            $catid = (int) JRequest::getInt('catid', 0);        }        $val_id = 0;        if ($catid) {            $makeid = (int) JRequest::getInt('makeid', 0);            if ($makeid) {                $val_id = $makeid;            }            $json_make = ExpAutosProFields::getExpSelect($catid, 'make', 'name', 'catid', '', 'name', '', $params->get('showcount', 1));            $json_make = json_decode($json_make);            //print_r($json_make);            if ($json_make) {                foreach ($json_make as $value) {                    if ($value->value > 0) {                        $options[] = JHTML::_('select.option', $value->value, $value->text);                    }                }            }        }        //print_r($options);        $expdisable = null;        if (empty($options)) {            $expdisable = ' disabled ';        }        $onchange = ' class="span2 chzn-expselectgoogleads" ' . $expdisable;        if ($params->get('usemodels')) {            $url = 'index.php?option=com_expautospro&view=expuser&format=ajax&ecount=' . $params->get('showcount', 1) . '&expmake_id=';            $onchange .= ' onchange="' . $expchange_func . '(this.value,\'' . $url . '\',\'modelid' . $module_id . '\',\'' . $mod_id . '\');expchg'.$nomap.'();"';        }        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_SELECT_MAKES_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'makeid', $onchange, 'value', 'text', $val_id, 'makeid'.$module_id);        }        return $return;    }        public static function getModel($module_id,$params) {        $nomap = $params->get('usegmaps');        $options = array();        $expparams = ExpAutosProExpparams::getExpParams('config', 1);        //$multi_models = $expparams->get('c_admanager_mdpage_multi',0);        $multi_models = false;        $makeid = (int) JRequest::getInt('makeid', 0);        $val_id = 0;        if ($makeid) {            if($multi_models){                $modelid = JRequest::getVar('modelid', array(), 'get', 'array');            }else{                $modelid = (int) JRequest::getInt('modelid', 0);            }            if ($modelid) {                $val_id = $modelid;            }            $json_model = ExpAutosProFields::getExpSelect($makeid, 'model', 'name', 'makeid', '', 'name', '', $params->get('showcount', 1));            $json_model = json_decode($json_model);            //print_r($json_make);            if ($json_model) {                foreach ($json_model as $value) {                    if ($value->value > 0) {                        $options[] = JHTML::_('select.option', $value->value, $value->text);                    }                }            }        }        $expdisable = null;        if (empty($options)) {            $expdisable = ' disabled ';        }        $val_multi = null;        $val_modelid = 'modelid';        if($multi_models){            $val_multi = ' multiple data-placeholder="'.JText::_('MOD_EXPAUTOSPRO_SEARCH_PLACEHOLDER_MULTI_TEXT').'" ';            $val_modelid = 'modelid[]';        }        $onchange=$val_multi.$expdisable.' class="span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();"';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_SELECT_MODELS_TEXT')));            $return = JHtml::_('select.genericlist', $options, $val_modelid, $onchange, 'value', 'text', $val_id, 'modelid'.$module_id);        }        return $return;    }        public static function getSpecificModel($module_id,$params) {        $nomap = $params->get('usegmaps');        $app = JFactory::getApplication();        $smodel = (string) JRequest::getString('specificmodel', '-2');        $val_id = 0;        if($smodel != '-2'){            $setsmodel = (string)$app->setUserState('expspecificmodel',$smodel);        }            $val_id = (string) $app->getUserState('expspecificmodel');        $return = '<input id="modexpsearch_specificmodel'.$module_id.'" type="text" name="specificmodel" class="inputbox span2" onchange="expchg'.$nomap.'();" value="'.$val_id.'" />';        return $return;    }        public static function getBodytype($module_id,$params) {        $nomap = $params->get('usegmaps');        $options = array();        $app = JFactory::getApplication();        $catid = '';        $show_catid = $params->get('catid');        if($show_catid){            $catid = $show_catid;        }else{            $catid = (int) JRequest::getInt('catid', 0);        }        $val_id = 0;        if ($catid) {            $bodytypeid = (int) JRequest::getInt('bodytype', -2);            if ($bodytypeid >= 0) {                $setbodytype = (int) $app->setUserState('expbodytype', $bodytypeid);            }            $val_id = (int) $app->getUserState('expbodytype');            $json_btype = ExpAutosProFields::getExpSelect($catid, 'bodytype', 'name', 'catid', '', 'name', '', 0);            $json_btype = json_decode($json_btype);            //print_r($json_make);            if ($json_btype) {                foreach ($json_btype as $value) {                    if ($value->value > 0) {                        $options[] = JHTML::_('select.option', $value->value, $value->text);                    }                }            }        }        $expdisable = null;        if (empty($options)) {            $expdisable = ' disabled ';        }        $onchange=$expdisable.' class="span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();"';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_SELECT_BODYTYPE_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'bodytype', $onchange, 'value', 'text', $val_id, 'bodytype'.$module_id);        }        return $return;    }        public static function getYearFrom($module_id,$params) {        $nomap = $params->get('usegmaps');        $expreqfield = ExpAutosProExpparams::getExpParams('config',1);        $minyear = $expreqfield->get('c_admanager_minyear');        $app = JFactory::getApplication();        $yearfromid = (int) JRequest::getInt('yearfrom', '-2');        if($yearfromid >= 0){            $setyearfrom = (int)$app->setUserState('expyearfrom',$yearfromid);        }        $val_id = (int) $app->getUserState('expyearfrom');        if (!isset($data)) {            $options[] = JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_SELECT_TEXT'));            for($i = date("Y") + 1; $i >= $minyear; $i--){                $options[] = JHTML::_('select.option', $i, $i);            }            $attr = ' class="modexpsearch_year span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();"';            $return = JHtml::_('select.genericlist', $options, 'yearfrom', $attr, 'value', 'text', $val_id, 'yearfrom'.$module_id);        }        return $return;    }        public static function getYearTo($module_id,$params) {        $nomap = $params->get('usegmaps');        $expreqfield = ExpAutosProExpparams::getExpParams('config',1);        $minyear = $expreqfield->get('c_admanager_minyear');        $app = JFactory::getApplication();        $yeartoid = (int) JRequest::getInt('yearto', '-2');        if($yeartoid >= 0){            $setyearto = (int)$app->setUserState('expyearto',$yeartoid);        }        $val_id = (int) $app->getUserState('expyearto');        if (!isset($data)) {            $options[] = JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_SELECT_TEXT'));            for($i = date("Y") + 1; $i >= $minyear; $i--){                $options[] = JHTML::_('select.option', $i, $i);            }            $attr = ' class="modexpsearch_year span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();"';            $return = JHtml::_('select.genericlist', $options, 'yearto', $attr, 'value', 'text', $val_id, 'yearto'.$module_id);        }        return $return;    }        public static function getPriceFrom($module_id,$params) {        $nomap = $params->get('usegmaps');        $app = JFactory::getApplication();        $pricefromid = (string) JRequest::getString('pricefrom', '-2');        if($pricefromid != '-2'){            $setpricefrom = (string)$app->setUserState('exppricefrom',$pricefromid);        }        $val_id = (string) $app->getUserState('exppricefrom');        /***** Select box ****/        $price_select = $params->get('price_field',0);        if ($price_select) {            $options[] = JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_SELECT_TEXT'));            $valarray = $params->get('price_fromval');            $options_arr = explode(",",$valarray);            foreach ($options_arr as $opt) {                $options[] = JHTML::_('select.option', $opt, $opt);            }            $attr = ' class="modgoogleads_price span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();" ';            $return = JHTML::_('select.genericlist', $options, 'pricefrom', $attr, 'value', 'text', $val_id, 'modexpsearch_pricefrom' . $module_id);        } else {            $return = '<input id="modexpsearch_pricefrom'.$module_id.'" type="text" name="pricefrom" onchange="expchg'.$nomap.'();" class="inputbox modgoogleads_price span2"  value="'.$val_id.'" />';        }        return $return;    }        public static function getPriceTo($module_id,$params) {        $nomap = $params->get('usegmaps');        $app = JFactory::getApplication();        $pricetoid = (string) JRequest::getString('priceto', '-2');        if($pricetoid != '-2'){            $setpriceto = (string)$app->setUserState('exppriceto',$pricetoid);        }        $val_id = (string) $app->getUserState('exppriceto');        /***** Select box ****/        $price_select = $params->get('price_field',0);        if ($price_select) {            $options[] = JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_SELECT_TEXT'));            $options_arr = explode(",",$params->get('price_toval'));            foreach($options_arr as $opt){                    if(!$opt){                            $options[] = JHTML::_('select.option', '', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_PRICE_ABOVE_TEXT'));                    }else{                            $options[] = JHTML::_('select.option', $opt, $opt);                    }            }            $attr = ' class="modgoogleads_price span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();" ';            $return = JHTML::_('select.genericlist', $options, 'priceto', $attr, 'value', 'text', $val_id, 'modexpsearch_priceto' . $module_id);        } else {            $return = '<input id="modexpsearch_priceto'.$module_id.'" type="text" name="priceto" onchange="expchg'.$nomap.'();" class="inputbox modgoogleads_price span2" value="'.$val_id.'" />';        }        return $return;    }        public static function getMileage($module_id,$params) {        $nomap = $params->get('usegmaps');        $app = JFactory::getApplication();        $mileageid = (string) JRequest::getString('mileage', '-2');        if($mileageid != '-2'){            $setmileage = (string)$app->setUserState('expmileage',$mileageid);        }            $val_id = (string) $app->getUserState('expmileage');        $return = '<input id="modexpsearch_mileage'.$module_id.'" type="text" name="mileage" onchange="expchg'.$nomap.'();" class="inputbox span2" value="'.$val_id.'" />';        return $return;    }        public static function getFuel($module_id,$params) {        $nomap = $params->get('usegmaps');        $options = array();        $app = JFactory::getApplication();        $fuelid = (int) JRequest::getInt('fuel', '-2');        if($fuelid >= 0){            $setfuel = (int)$app->setUserState('expfuel',$fuelid);        }        $val_id = (int) $app->getUserState('expfuel');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_fuel');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange=' class="span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();"';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_FORM_FUEL_SELECT_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'fuel', $onchange, 'value', 'text', $val_id, 'fuel'.$module_id);        }        return $return;    }        public static function getDrive($module_id,$params) {        $nomap = $params->get('usegmaps');        $options = array();        $app = JFactory::getApplication();        $driveid = (int) JRequest::getInt('drive', '-2');        if($driveid >= 0){            $setdrive = (int)$app->setUserState('expdrive',$driveid);        }        $val_id = (int) $app->getUserState('expdrive');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_drive');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange=' class="span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();"';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_FORM_DRIVE_SELECT_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'drive', $onchange, 'value', 'text', $val_id, 'drive'.$module_id);        }        return $return;    }        public static function getTrans($module_id,$params) {        $nomap = $params->get('usegmaps');        $options = array();        $app = JFactory::getApplication();        $transid = (int) JRequest::getInt('trans', '-2');        if($transid >= 0){            $settrans = (int)$app->setUserState('exptrans',$transid);        }        $val_id = (int) $app->getUserState('exptrans');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_trans');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange=' class="span2 chzn-expselectgoogleads" onchange="expchg'.$nomap.'();"';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_GOOGLEADS_FORM_TRANSMISSION_SELECT_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'trans', $onchange, 'value', 'text', $val_id, 'trans'.$module_id);        }        return $return;    }}?>