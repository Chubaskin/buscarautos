<?php/* * **************************************************************************************\ * *   @name		EXP Autos  2.0                                                  ** * *   @package          Joomla 1.6                                                      ** * *   @author		EXP TEAM::Alexey Kurguz (Grusha)                                ** * *   @copyright	Copyright (C) 2005 - 2011  EXP TEAM::Alexey Kurguz (Grusha)     ** * *   @link             http://www.feellove.eu                                          ** * *   @license		Commercial License                                              **  \*************************************************************************************** *///no direct accessdefined('_JEXEC') or die;require_once JPATH_ROOT . '/components/com_expautospro/helpers/expparams.php';require_once JPATH_ROOT . '/components/com_expautospro/helpers/helper.php';require_once JPATH_ROOT . '/components/com_expautospro/helpers/expfields.php';class ModExpautosSearchHor {    public static function expsearchvert() {            }    public static function getItemid() {        $expitemid = ExpAutosProExpparams::getExpLinkItemid();        return $expitemid;    }    public static function getExpId($module_id) {        $return = '<input id="modexpsearch_id' . $module_id . '" type="text" name="id" class="inputbox" />';        return $return;    }    public static function getStockNumber($module_id) {        $app = JFactory::getApplication();        $stocknumid = (string) JRequest::getString('stocknum', '-2');        if ($stocknumid != '-2') {            $setstocknumid = (string) $app->setUserState('expstocknumid', $stocknumid);        }        $val_id = (string) $app->getUserState('expstocknumid');        $return = '<input id="modexpsearch_stocknum' . $module_id . '" type="text" name="stocknum" class="inputbox" value="' . $val_id . '" />';        return $return;    }    public static function getVincode($module_id) {        $app = JFactory::getApplication();        $vincodeid = (string) JRequest::getString('vincode', '-2');        if ($vincodeid != '-2') {            $setvincode = (string) $app->setUserState('expvincode', $vincodeid);        }        $val_id = (string) $app->getUserState('expvincode');        $return = '<input id="modexpsearch_vincode' . $module_id . '" type="text" name="vincode" class="inputbox" value="' . $val_id . '" />';        return $return;    }    public static function getList($module_id, $params) {        $jq_chained = $params->get('jq_chained',0);        $mod_id = 'expbutton' . $module_id;        if($jq_chained){          $expchange_func = ' expchangejq';        }else{          $expchange_func = ' expchange';        }        $catid = (int) JRequest::getInt('catid', 0);        $val_id = 0;        if ($catid) {            $val_id = $catid;        }        $options = ExpAutosProExpparams::getExpCategories($params->get('allowedcat'),$params->get('showcount',1));        //print_r($options);        $ajaxlink = '';        $onchange = ' class="span2 chzn-expselectsearchhor" onchange="';        if ($params->get('usebodytype')) {            $url2 = 'index.php?option=com_expautospro&view=expuser&format=ajax&bodytype_id=';            $ajaxlink .= $expchange_func.'(this.value,\'' . $url2 . '\',\'bodytype' . $module_id . '\');';        }        if ($params->get('useextrafield1')) {            $url3 = 'index.php?option=com_expautospro&view=expuser&format=ajax&extrafield1_id=';            $ajaxlink .= $expchange_func.'(this.value,\'' . $url3 . '\',\'extrafield1' . $module_id . '\');';        }        if ($params->get('usemakes')) {            $url1 = 'index.php?option=com_expautospro&view=expuser&format=ajax&ecount='.$params->get('showcount',1).'&expcat_id=';            $ajaxlink .= $expchange_func.'(this.value,\'' . $url1 . '\',\'makeid' . $module_id . '\',\'expbutton' . $module_id . '\');';        }        if ($params->get('usemodels')) {            $ajaxlink .= ' expselectval(this.value,\'modelid'.$module_id.'\'); ';        }        $expeqparams = $params->get('equipments');        if ($params->get('useequipment') && $expeqparams) {            $url1 = 'index.php?option=com_expautospro&view=expuser&format=ajax&expeq='.$expeqparams.'&expeqval=2&expcequip_id=';            $ajaxlink .= $expchange_func.'(this.value,\'' . $url1 . '\',\'expequip' . $module_id . '\',\'expbutton' . $module_id . '\',1);';        }        $onchange .= $ajaxlink . '"';        $return = JHtml::_('select.genericlist', $options, 'catid', $onchange, 'value', 'text', $val_id, 'catid' . $module_id);        return $return;    }    public static function getCategory($module_id, $params) {    }    public static function getMake($module_id, $params) {        $jq_chained = $params->get('jq_chained',0);        $mod_id = 'expbutton' . $module_id;        if($jq_chained){          $expchange_func = ' expchangejq';        }else{          $expchange_func = ' expchange';        }        $options = array();        $catid = '';        $show_catid = $params->get('catid');        if ($show_catid) {            $catid = $show_catid;        } else {            $catid = (int) JRequest::getInt('catid', 0);        }        $val_id = 0;        if ($catid) {            $makeid = (int) JRequest::getInt('makeid', 0);            if ($makeid) {                $val_id = $makeid;            }            $json_make = ExpAutosProFields::getExpSelect($catid, 'make', 'name', 'catid', '', 'name','',$params->get('showcount',1));            $json_make = json_decode($json_make);            //print_r($json_make);            if($json_make){                foreach ($json_make as $value) {                    if($value->value > 0){                        $options[] = JHTML::_('select.option', $value->value, $value->text);                    }                }            }        }        $expdisable = null;        if(empty($options)){            $expdisable = ' disabled ';        }        $onchange = $expdisable.' class="span2 chzn-expselectsearchhor" ';        if ($params->get('usemodels')) {            $url = 'index.php?option=com_expautospro&view=expuser&format=ajax&ecount='.$params->get('showcount',1).'&expmake_id=';            $onchange .= ' onchange="'.$expchange_func.'(this.value,\'' . $url . '\',\'modelid' . $module_id . '\',\'expbutton' . $module_id . '\');"';        }        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_MAKES_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'makeid', $onchange, 'value', 'text', $val_id, 'makeid' . $module_id);        }        return $return;    }    public static function getModel($module_id, $params) {        $options = array();        $expparams = ExpAutosProExpparams::getExpParams('config', 1);        $multi_models = $expparams->get('c_admanager_mdpage_multi',0);        $makeid = (int) JRequest::getInt('makeid', 0);        $val_id = 0;        if ($makeid) {            if($multi_models){                $modelid = JRequest::getVar('modelid', array(), 'get', 'array');            }else{                $modelid = (int) JRequest::getInt('modelid', 0);            }            if ($modelid) {                $val_id = $modelid;            }            $json_model = ExpAutosProFields::getExpSelect($makeid, 'model', 'name', 'makeid', '', 'name','',$params->get('showcount',1));            $json_model = json_decode($json_model);            //print_r($json_make);            if($json_model){                foreach ($json_model as $value) {                    if($value->value > 0){                        $options[] = JHTML::_('select.option', $value->value, $value->text);                    }                }            }        }        $expdisable = null;        if(empty($options)){            $expdisable = ' disabled ';        }        $val_multi = null;        $val_modelid = 'modelid';        if($multi_models){            $val_multi = ' multiple data-placeholder="'.JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_PLACEHOLDER_MULTI_TEXT').'" ';            $val_modelid = 'modelid[]';        }        $onchange = $val_multi.$expdisable.' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_MODELS_TEXT')));            $return = JHtml::_('select.genericlist', $options, $val_modelid, $onchange, 'value', 'text', $val_id, 'modelid' . $module_id);        }        return $return;    }    public static function getSpecificModel($module_id) {        $app = JFactory::getApplication();        $smodel = (string) JRequest::getString('specificmodel', '-2');        $val_id = 0;        if ($smodel != '-2') {            $setsmodel = (string) $app->setUserState('expspecificmodel', $smodel);        }        $val_id = (string) $app->getUserState('expspecificmodel');        $return = '<input id="modexpsearch_specificmodel' . $module_id . '" type="text" name="specificmodel" class="inputbox" value="' . $val_id . '" />';        return $return;    }    public static function getCondition($module_id) {        $options = array();        $app = JFactory::getApplication();        $conditionid = (int) JRequest::getInt('condition', '-2');        $val_id = 0;        if ($conditionid >= 0) {            $setcondition = (int) $app->setUserState('expcondition', $conditionid);        }        $val_id = (int) $app->getUserState('expcondition');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_condition');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_CONDITION_SELECT_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'condition', $onchange, 'value', 'text', $val_id, 'condition' . $module_id);        }        return $return;    }    public static function getBodytype($module_id, $params) {        $options = array();        $app = JFactory::getApplication();        $catid = '';        $show_catid = $params->get('catid');        if ($show_catid) {            $catid = $show_catid;        } else {            $catid = (int) JRequest::getInt('catid', 0);        }        $val_id = 0;        if ($catid) {             $bodytypeid = (int) JRequest::getInt('bodytype', -2);            if ($bodytypeid >= 0) {                $setbodytype = (int) $app->setUserState('expbodytype', $bodytypeid);            }            $val_id = (int) $app->getUserState('expbodytype');            $json_btype = ExpAutosProFields::getExpSelect($catid, 'bodytype', 'name', 'catid', '', 'name','',0);            $json_btype = json_decode($json_btype);            //print_r($json_make);            if($json_btype){                foreach ($json_btype as $value) {                    if($value->value > 0){                        $options[] = JHTML::_('select.option', $value->value, $value->text);                    }                }            }        }        $expdisable = null;        if(empty($options)){            $expdisable = ' disabled ';        }        $onchange = $expdisable.' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_BODYTYPE_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'bodytype', $onchange, 'value', 'text', $val_id, 'bodytype' . $module_id);        }        return $return;    }    public static function getExtrafield1($module_id, $params) {        $options = array();        $app = JFactory::getApplication();        $catid = '';        $show_catid = $params->get('catid');        if ($show_catid) {            $catid = $show_catid;        } else {            $catid = (int) JRequest::getInt('catid', 0);        }        $val_id = 0;        if ($catid) {            $extrafield1id = (int) JRequest::getInt('extrafield1', -2);            if ($extrafield1id >= 0) {                $setextrafield1 = (int) $app->setUserState('extrafield1', $extrafield1id);            }            $val_id = (int) $app->getUserState('extrafield1');            $json_extrafield1 = ExpAutosProFields::getExpSelect($catid, 'extrafield1', 'name', 'catid', '', 'name','',0);            $json_extrafield1 = json_decode($json_extrafield1);            //print_r($json_make);            if($json_extrafield1){                foreach ($json_extrafield1 as $value) {                    if($value->value > 0){                        $options[] = JHTML::_('select.option', $value->value, $value->text);                    }                }            }        }        $expdisable = null;        if(empty($options)){            $expdisable = ' disabled ';        }        $onchange = $expdisable.' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_EXTRAFIELD1_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'extrafield1', $onchange, 'value', 'text', $val_id, 'extrafield1' . $module_id);        }        return $return;    }    public static function getExtrafield2($module_id) {        $options = array();        $app = JFactory::getApplication();        $extrafield2id = (int) JRequest::getInt('extrafield2', '-2');        $val_id = 0;        if ($extrafield2id >= 0) {            $setextrafield2 = (int) $app->setUserState('expextrafield2', $extrafield2id);        }        $val_id = (int) $app->getUserState('expextrafield2');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_extrafield2');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_EXTRAFIELD2_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'extrafield2', $onchange, 'value', 'text', $val_id, 'extrafield2' . $module_id);        }        return $return;    }    public static function getExtrafield3($module_id) {        $options = array();        $app = JFactory::getApplication();        $extrafield3id = (int) JRequest::getInt('extrafield3', '-2');        if ($extrafield3id >= 0) {            $setextrafield3 = (int) $app->setUserState('expextrafield3', $extrafield3id);        }        $val_id = (int) $app->getUserState('expextrafield3');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_extrafield3');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_EXTRAFIELD3_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'extrafield3', $onchange, 'value', 'text', $val_id, 'extrafield3' . $module_id);        }        return $return;    }    public static function getYearFrom($module_id) {        $expreqfield = ExpAutosProExpparams::getExpParams('config', 1);        $minyear = $expreqfield->get('c_admanager_minyear');        $app = JFactory::getApplication();        $yearfromid = (int) JRequest::getInt('yearfrom', '-2');        if ($yearfromid >= 0) {            $setyearfrom = (int) $app->setUserState('expyearfrom', $yearfromid);        }        $val_id = (int) $app->getUserState('expyearfrom');        if (!isset($data)) {            $options[] = JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_TEXT'));            for ($i = date("Y") + 1; $i >= $minyear; $i--) {                $options[] = JHTML::_('select.option', $i, $i);            }            $attr = ' class="modexpsearch_year chzn-expselectsearchhor"';            $return = JHtml::_('select.genericlist', $options, 'yearfrom', $attr, 'value', 'text', $val_id, 'yearfrom' . $module_id);        }        return $return;    }    public static function getYearTo($module_id) {        $expreqfield = ExpAutosProExpparams::getExpParams('config', 1);        $minyear = $expreqfield->get('c_admanager_minyear');        $app = JFactory::getApplication();        $yeartoid = (int) JRequest::getInt('yearto', '-2');        if ($yeartoid >= 0) {            $setyearto = (int) $app->setUserState('expyearto', $yeartoid);        }        $val_id = (int) $app->getUserState('expyearto');        if (!isset($data)) {            $options[] = JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_TEXT'));            for ($i = date("Y") + 1; $i >= $minyear; $i--) {                $options[] = JHTML::_('select.option', $i, $i);            }            $attr = ' class="modexpsearch_year chzn-expselectsearchhor"';            $return = JHtml::_('select.genericlist', $options, 'yearto', $attr, 'value', 'text', $val_id, 'yearto' . $module_id);        }        return $return;    }    public static function getPriceFrom($module_id,$params) {        $app = JFactory::getApplication();        $pricefromid = (string) JRequest::getString('pricefrom', '-2');        if ($pricefromid != '-2') {            $setpricefrom = (string) $app->setUserState('exppricefrom', $pricefromid);        }        $val_id = (string) $app->getUserState('exppricefrom');        /***** Select box ****/        $price_select = $params->get('price_field',0);        if ($price_select) {            $options[] = JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_TEXT'));            $valarray = $params->get('price_fromval');            $options_arr = explode(",",$valarray);            foreach ($options_arr as $opt) {                $options[] = JHTML::_('select.option', $opt, $opt);            }            $attr = ' class="modexpsearch_price input-mini chzn-expselectsearchhor"';            $return = JHTML::_('select.genericlist', $options, 'pricefrom', $attr, 'value', 'text', $val_id, 'pricefrom' . $module_id);        } else {            $return = '<input id="modexpsearch_pricefrom' . $module_id . '" type="text" name="pricefrom" class="inputbox modexpsearch_price"  value="' . $val_id . '" />';        }        return $return;    }    public static function getPriceTo($module_id,$params) {        $app = JFactory::getApplication();        $pricetoid = (string) JRequest::getString('priceto', '-2');        if ($pricetoid != '-2') {            $setpriceto = (string) $app->setUserState('exppriceto', $pricetoid);        }        $val_id = (string) $app->getUserState('exppriceto');        /***** Select box ****/        $price_select = $params->get('price_field',0);        if ($price_select) {            $options[] = JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_TEXT'));            $options_arr = explode(",",$params->get('price_toval'));            foreach($options_arr as $opt){                    if(!$opt){                            $options[] = JHTML::_('select.option', '', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_PRICE_ABOVE_TEXT'));                    }else{                            $options[] = JHTML::_('select.option', $opt, $opt);                    }            }            $attr = ' class="modexpsearch_price input-mini chzn-expselectsearchhor"';            $return = JHTML::_('select.genericlist', $options, 'priceto', $attr, 'value', 'text', $val_id, 'priceto' . $module_id);        } else {            $return = '<input id="modexpsearch_priceto' . $module_id . '" type="text" name="priceto" class="inputbox modexpsearch_price" value="' . $val_id . '" />';        }        return $return;    }    public static function getMileage($module_id) {        $app = JFactory::getApplication();        $mileageid = (string) JRequest::getString('mileage', '-2');        if ($mileageid != '-2') {            $setmileage = (string) $app->setUserState('expmileage', $mileageid);        }        $val_id = (string) $app->getUserState('expmileage');        $return = '<input id="modexpsearch_mileage' . $module_id . '" type="text" name="mileage" class="inputbox" value="' . $val_id . '" />';        return $return;    }    public static function getFuel($module_id) {        $options = array();        $app = JFactory::getApplication();        $fuelid = (int) JRequest::getInt('fuel', '-2');        if ($fuelid >= 0) {            $setfuel = (int) $app->setUserState('expfuel', $fuelid);        }        $val_id = (int) $app->getUserState('expfuel');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_fuel');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_FORM_FUEL_SELECT_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'fuel', $onchange, 'value', 'text', $val_id, 'fuel' . $module_id);        }        return $return;    }    public static function getDrive($module_id) {        $options = array();        $app = JFactory::getApplication();        $driveid = (int) JRequest::getInt('drive', '-2');        if ($driveid >= 0) {            $setdrive = (int) $app->setUserState('expdrive', $driveid);        }        $val_id = (int) $app->getUserState('expdrive');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_drive');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_FORM_DRIVE_SELECT_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'drive', $onchange, 'value', 'text', $val_id, 'drive' . $module_id);        }        return $return;    }    public static function getTrans($module_id) {        $options = array();        $app = JFactory::getApplication();        $transid = (int) JRequest::getInt('trans', '-2');        if ($transid >= 0) {            $settrans = (int) $app->setUserState('exptrans', $transid);        }        $val_id = (int) $app->getUserState('exptrans');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_trans');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_FORM_TRANSMISSION_SELECT_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'trans', $onchange, 'value', 'text', $val_id, 'trans' . $module_id);        }        return $return;    }    public static function getCountry($module_id, $params) {        $jq_chained = $params->get('jq_chained',0);        $mod_id = 'expbutton' . $module_id;        if($jq_chained){          $expchange_func = ' expchangejq';        }else{          $expchange_func = ' expchange';        }        $select_country = $params->get('country');        if ($select_country) {            $db = JFactory::getDbo();            $query = $db->getQuery(true);            $query->select('name As countryname');            $query->from('#__expautos_country');            $query->where('id = ' . $select_country);            $query->where('state = 1');            $query->order('ordering');            // Get the options.            $db->setQuery($query);            $return = $db->loadResult();        } else {            $options = array();            $app = JFactory::getApplication();            $countryid = (int) JRequest::getInt('country', '-2');            if ($countryid >= 0) {                $setcountry = (int) $app->setUserState('expcountry', $countryid);            }            $val_id = (int) $app->getUserState('expcountry');            $db = JFactory::getDbo();            $query = $db->getQuery(true);            $query->select('id As value, name As text');            $query->from('#__expautos_country');            $query->where('state = 1');            $query->order('name');            // Get the options.            $db->setQuery($query);            $options = $db->loadObjectList();            // Check for a database error.            if ($db->getErrorNum()) {                JError::raiseWarning(500, $db->getErrorMsg());            }            $onchange = ' class="span2 chzn-expselectsearchhor" ';            if ($params->get('useexpstate')) {                $url = 'index.php?option=com_expautospro&view=expuser&format=ajax&expcountry_id=';                $onchange .= ' onchange="'.$expchange_func.'(this.value,\'' . $url . '\',\'expstate' . $module_id . '\',\'expbutton' . $module_id . '\')"';            }            if (!isset($data)) {                array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_COUNTRY_TEXT')));                $return = JHtml::_('select.genericlist', $options, 'country', $onchange, 'value', 'text', $val_id, 'country' . $module_id);            }        }        return $return;    }    public static function getExpState($module_id, $params) {        $jq_chained = $params->get('jq_chained',0);        $mod_id = 'expbutton' . $module_id;        if($jq_chained){          $expchange_func = ' expchangejq';        }else{          $expchange_func = ' expchange';        }        $options = array();        $app = JFactory::getApplication();        $setcountry = '';        $select_country = $params->get('country');        if ($select_country) {            $setcountry = $select_country;        } else {            $setcountry = (int) $app->getUserState('expcountry');        }        $val_id = 0;        if ($setcountry) {            $expstateid = (int) JRequest::getInt('expstate', '-2');            if ($expstateid >= 0) {                $setexpstate = (int) $app->setUserState('expstateval', $expstateid);            }            $val_id = (int) $app->getUserState('expstateval');            $db = JFactory::getDbo();            $query = $db->getQuery(true);            $query->select('id As value, name As text');            $query->from('#__expautos_state');            $query->where('state = 1');            $query->where('catid = ' . $setcountry);            $query->order('name');            // Get the options.            $db->setQuery($query);            $options = $db->loadObjectList();            // Check for a database error.            if ($db->getErrorNum()) {                JError::raiseWarning(500, $db->getErrorMsg());            }        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if ($params->get('usecity')) {            $url = 'index.php?option=com_expautospro&view=expuser&format=ajax&state_id=';            $onchange .= ' onchange="'.$expchange_func.'(this.value,\'' . $url . '\',\'city' . $module_id . '\',\'expbutton' . $module_id . '\');"';        }        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_STATE_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'expstate', $onchange, 'value', 'text', $val_id, 'expstate' . $module_id);        }        return $return;    }    public static function getCity($module_id) {        $options = array();        $app = JFactory::getApplication();        $setexpstate = (int) $app->getUserState('expstateval');        $val_id = 0;        if ($setexpstate) {            $expcityid = (int) JRequest::getInt('city', '-2');            if ($expcityid >= 0) {                $setexpcity = (int) $app->setUserState('expcity', $expcityid);            }            $val_id = (int) $app->getUserState('expcity');            $db = JFactory::getDbo();            $query = $db->getQuery(true);            $query->select('id As value, city_name As text');            $query->from('#__expautos_cities');            $query->where('state = 1');            $query->where('catid = ' . $setexpstate);            $query->order('city_name');            // Get the options.            $db->setQuery($query);            $options = $db->loadObjectList();            // Check for a database error.            if ($db->getErrorNum()) {                JError::raiseWarning(500, $db->getErrorMsg());            }        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_CITY_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'city', $onchange, 'value', 'text', $val_id, 'city' . $module_id);        }        return $return;    }    public static function getDealer($module_id) {        $options = array();        $sortfield = "us.username";        $app = JFactory::getApplication();        $val_id = 0;        /*          $expuserid = (int) JRequest::getInt('userid', 0);          if($expuserid){          $val_id = $expuserid;          }         */        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('a.userid As value, ' . $sortfield . ' As text');        $query->from('#__expautos_expuser AS a');        $query->join('LEFT', '#__users AS us ON us.id = a.userid');        $query->where('a.state = 1');        $query->where('us.block = 0');        $query->order($sortfield);        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_FORM_USER_SELECT_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'userid', $onchange, 'value', 'text', $val_id, 'userid' . $module_id);        }        return $return;    }    public static function getZipCode($module_id) {        $app = JFactory::getApplication();        $zipcodeid = (string) JRequest::getString('zipcode', '-2');        if ($zipcodeid != '-2') {            $setzipcode = (string) $app->setUserState('expzipcode', $zipcodeid);        }        $val_id = (string) $app->getUserState('expzipcode');        $return = '<input id="modexpsearch_zipcode' . $module_id . '" type="text" name="zipcode" class="inputbox" value="' . $val_id . '" />';        return $return;    }    public static function getRadius($module_id) {        $expreqfield = ExpAutosProExpparams::getExpParams('config', 1);        $configradius = $expreqfield->get('c_general_distanceunit');        $app = JFactory::getApplication();        $radiusid = (int) JRequest::getInt('radius', '-2');        if ($radiusid >= 0) {            $setradius = (int) $app->setUserState('expradius', $radiusid);        }        $val_id = (int) $app->getUserState('expradius');        switch ($configradius):            /*             * * miles ** */            case 1:                $text = JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_FORM_RADIUS_MILES_TEXT');                break;            /*             * * nautical miles ** */            case 2:                $text = JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_FORM_RADIUS_NMILES_TEXT');                break;            default:                /*                 * * kilometers ** */                $text = JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_FORM_RADIUS_KMS_TEXT');        endswitch;        $radius[] = JHTML::_('select.option', '', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_RADIUS_TEXT'));        $radius[] = JHTML::_('select.option', '5', '5 ' . $text);        $radius[] = JHTML::_('select.option', '10', '10 ' . $text);        $radius[] = JHTML::_('select.option', '20', '20 ' . $text);        $radius[] = JHTML::_('select.option', '50', '50 ' . $text);        $radius[] = JHTML::_('select.option', '100', '100 ' . $text);        $radius[] = JHTML::_('select.option', '250', '250 ' . $text);        $radius[] = JHTML::_('select.option', '500', '500 ' . $text);        $onchange = ' class="span2 chzn-expselectsearchhor" ';        $return = JHTML::_('select.genericlist', $radius, 'radius', $onchange, 'value', 'text', $val_id, 'radius' . $module_id);        return $return;    }    public static function getAgeof($module_id) {        $app = JFactory::getApplication();        $ageofid = (int) JRequest::getInt('ageof', '-2');        if ($ageofid >= 0) {            $setageof = (int) $app->setUserState('expageof', $ageofid);        }        $val_id = (int) $app->getUserState('expageof');        $ageof[] = JHTML::_('select.option', '', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_AGEOF_ALL_TEXT'));        $ageof[] = JHTML::_('select.option', '1', JText::_(JText::sprintf('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_AGEOF_DAY_TEXT', 1)));        $ageof[] = JHTML::_('select.option', '3', JText::_(JText::sprintf('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_AGEOF_DAYS_TEXT', 3)));        $ageof[] = JHTML::_('select.option', '7', JText::_(JText::sprintf('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_AGEOF_DAYS_TEXT', 7)));        $ageof[] = JHTML::_('select.option', '14', JText::_(JText::sprintf('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_AGEOF_DAYS_TEXT', 14)));        $onchange = ' class="span2 chzn-expselectsearchhor" ';        $return = JHTML::_('select.genericlist', $ageof, 'ageof', $onchange, 'value', 'text', $val_id, 'ageof' . $module_id);        return $return;        ;    }    public static function expsortBy($module_id) {        /*          $app = JFactory::getApplication();          $sortbyid = (int) JRequest::getInt('sortby', '-2');          if($sortbyid >= 0){          $setsortby = (int)$app->setUserState('expsortby',$sortbyid);          }          $val_id = (int) $app->getUserState('expsortby');         */        $val_id = 0;        $expsortby[] = JHTML::_('select.option', '', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_TEXT'));        $expsortby[] = JHTML::_('select.option', 'make_name', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_SORTBY_MAKES_TEXT'));        $expsortby[] = JHTML::_('select.option', 'model_name', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_SORTBY_MODELS_TEXT'));        $expsortby[] = JHTML::_('select.option', 'price', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_SORTBY_PRICE_TEXT'));        $expsortby[] = JHTML::_('select.option', 'a.year', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_SORTBY_YEAR_TEXT'));        $onchange = ' class="span2 chzn-expselectsearchhor" ';        $return = JHTML::_('select.genericlist', $expsortby, 'filter_order', $onchange, 'value', 'text', $val_id, 'sortby' . $module_id);        return $return;        ;    }    public static function getWithImages($module_id) {        $app = JFactory::getApplication();        $imgid = (string) JRequest::getString('img', '0');        $val_id = (string) $app->getUserState('expimg');        if ($imgid || $val_id) {            $check = 'checked';            $setimg = (string) $app->setUserState('expimg', $imgid);        } else {            $check = '';        }        $return = '<input type="checkbox" name="img" value="1" ' . $check . ' />';        return $return;    }    public static function getWsolid($module_id) {        $app = JFactory::getApplication();        $wsolidid = (string) JRequest::getString('wsolid', '0');        $val_id = (string) $app->getUserState('expwsolid');        if ($wsolidid || $val_id) {            $check = 'checked';            $setwsolid = (string) $app->setUserState('expwsolid', $wsolidid);        } else {            $check = '';        }        $return = '<input type="checkbox" name="wsolid" value="1" ' . $check . ' />';        return $return;    }    public static function getEquipment($module_id, $params) {        $options = array();        $app = JFactory::getApplication();        $catid = '';        $show_catid = $params->get('catid');        if ($show_catid) {            $catid = $show_catid;        } else {            $catid = (int) JRequest::getInt('catid', 0);        }        $val_id = 0;        $listequip = '';        $expequip = $params->get('equipments');        if ($catid && $expequip) {            $listequip = ExpAutosProExpparams::getExpEquipments($catid, $expequip);        }        $html = '';        if($listequip){            foreach($listequip as $item){            $html .= '<li class="expautospro_search searchcheckbox">                <label for="modexpsearch_equipmets">'.$item->text.'</label>                <input type="checkbox" name="equipmets[]" value="'.$item->value.'"  />                    </li>';            }        }       // print_r($html);        return $html;    }    public static function getColor($module_id) {        $options = array();        $app = JFactory::getApplication();        $extrafield3id = (int) JRequest::getInt('color', '-2');        if ($extrafield3id >= 0) {            $setextrafield3 = (int) $app->setUserState('expcolor', $extrafield3id);        }        $val_id = (int) $app->getUserState('expcolor');        $db = JFactory::getDbo();        $query = $db->getQuery(true);        $query->select('id As value, name As text');        $query->from('#__expautos_color');        $query->where('state = 1');        $query->order('ordering');        // Get the options.        $db->setQuery($query);        $options = $db->loadObjectList();        // Check for a database error.        if ($db->getErrorNum()) {            JError::raiseWarning(500, $db->getErrorMsg());        }        $onchange = ' class="span2 chzn-expselectsearchhor" ';        if (!isset($data)) {            array_unshift($options, JHtml::_('select.option', '0', JText::_('MOD_EXPAUTOSPRO_SEARCH_HOR_SELECT_COLOR_TEXT')));            $return = JHtml::_('select.genericlist', $options, 'color', $onchange, 'value', 'text', $val_id, 'color' . $module_id);        }        return $return;    }}?>